from pydantic import BaseModel, Field
from typing import Optional


class UnderwritingRequest(BaseModel):
    """Request model for property underwriting"""
    project_name: str = Field(..., description="The name of the project")
    location: str = Field(..., description="The location of the property")
    property_type: str = Field(..., description="The type of property (e.g., office, retail, industrial, multifamily)")
    acquisition_price: float = Field(..., description="The acquisition price of the property in dollars")
    construction_cost: float = Field(..., description="The construction cost of the property in dollars")
    square_footage: float = Field(..., description="The total square footage of the property")
    projected_rent_per_sf: float = Field(..., description="The projected rent per square foot in dollars")
    vacancy_rate: float = Field(..., description="The vacancy rate as a percentage (e.g., 5 for 5%)")
    operating_expenses_per_sf: float = Field(..., description="The operating expenses per square foot in dollars")
    exit_cap_rate: float = Field(..., description="The exit capitalization rate as a percentage (e.g., 5.5)")


class UnderwritingResponse(BaseModel):
    """Response model for property underwriting"""
    # Input values (for reference)
    project_name: str
    location: str
    property_type: str
    acquisition_price: float
    construction_cost: float
    square_footage: float
    projected_rent_per_sf: float
    vacancy_rate: float
    operating_expenses_per_sf: float
    exit_cap_rate: float
    
    # Calculated values
    gross_potential_income: float = Field(..., description="Gross Potential Income (GPI) in dollars")
    effective_gross_income: float = Field(..., description="Effective Gross Income (EGI) in dollars")
    operating_expenses: float = Field(..., description="Total Operating Expenses in dollars")
    net_operating_income: float = Field(..., description="Net Operating Income (NOI) in dollars")
    project_cost: float = Field(..., description="Total Project Cost in dollars")
    estimated_exit_value: float = Field(..., description="Estimated Exit Value in dollars")
    development_margin: float = Field(..., description="Development Margin as a percentage")
    
    # DeepSeek-generated summary
    underwriting_summary: str = Field(..., description="Institutional-style underwriting summary generated by AI")
